Template {
  NodeTemplate
    = NodeTemplateBase -- template
    | "@" NodeCondition "->" NodeTemplateBase -- conditionalTemplate

  NodeTemplateBase = NonemptyListOf<NodeSegment, letter*>

  NodeSegment
    = NodeReplacement -- replacement
    | ConditionalNodeReplacement -- conditionalReplacement

  NodeReplacement
    = "{{" NodeSelector "}}" -- selector
    | LiteralValue -- literal

  ConditionalNodeReplacement = "[[" NodeCondition "->" NonemptyListOf<NodeReplacement, letter*> "]]"

  NodeCondition
    = NodeSelector ComparisonOperator LiteralValue -- comparison
    | NodeSelector ".exists" -- exists

  ComparisonOperator = "=" | "!=" | "<=" | ">=" | "<" | ">"

  Literal = letter+

  NodeSelector
    = Keyword -- keyword
    | AttributeSelector -- attribute
    | PathSelector -- path

  Keyword =  "id" | "name" | "tag" | "type"

  AttributeSelector = "attr." AttributeName

  AttributeName = (letter | ":")+

  PathSelector = "path." PathKey

  PathKey = "length" | "step"

  LiteralValue = (letter | digit | ":" | "." | "," | "=" | "<" | ">" | "(" | ")")+
}
