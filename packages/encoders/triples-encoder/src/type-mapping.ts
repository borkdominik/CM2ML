export const elementTypes = [
  'BusinessActor',
  'BusinessRole',
  'BusinessCollaboration',
  'BusinessInterface',
  'BusinessProcess',
  'BusinessFunction',
  'BusinessInteraction',
  'BusinessService',
  'BusinessEvent',
  'BusinessObject',
  'Contract',
  'Representation',
  'Product',
  'ApplicationComponent',
  'ApplicationCollaboration',
  'ApplicationInterface',
  'ApplicationProcess',
  'ApplicationFunction',
  'ApplicationInteraction',
  'ApplicationService',
  'ApplicationEvent',
  'DataObject',
  'Node',
  'Device',
  'SystemSoftware',
  'TechnologyCollaboration',
  'TechnologyInterface',
  'TechnologyProcess',
  'TechnologyFunction',
  'TechnologyInteraction',
  'TechnologyService',
  'TechnologyEvent',
  'Artifact',
  'CommunicationNetwork',
  'Path',
  'Equipment',
  'DistributionNetwork',
  'Facility',
  'Material',
  'Stakeholder',
  'Driver',
  'Assessment',
  'Goal',
  'Outcome',
  'Principle',
  'Requirement',
  'Constraint',
  'Value',
  'Meaning',
  'Resource',
  'Capability',
  'ValueStream',
  'CourseOfAction',
  'WorkPackage',
  'ImplementationEvent',
  'Deliverable',
  'Plateau',
  'Gap',
  'Location',
  'Grouping',
  'Junction',
  'OrJunction',
  'AndJunction',
]

export const relationshipTypes = [
  'AssociationRelationship',
  'RealizationRelationship',
  'ServingRelationship',
  'FlowRelationship',
  'AggregationRelationship',
  'InfluenceRelationship',
  'CompositionRelationship',
  'TriggeringRelationship',
  'AssignmentRelationship',
  'SpecializationRelationship',
  'AccessRelationship',
]

export const typeMapping: Record<string, number> = Object.fromEntries(
  elementTypes.map((type, index) => [type, index + 1]),
)

export const relationshipMapping: Record<string, number> = Object.fromEntries(
  relationshipTypes.map((type, index) => [type, index + 1]),
)
